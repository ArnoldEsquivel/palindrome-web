version: '3.8'

services:
  # Frontend Next.js application
  palindrome-web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:3000
      - NEXT_TELEMETRY_DISABLED=1
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - palindrome-network

  # Optional: If you want to include the backend API in the same compose
  # palindrome-api:
  #   image: palindrome-api:latest
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - NODE_ENV=production
  #     - DATABASE_URL=postgresql://user:password@db:5432/palindrome
  #   depends_on:
  #     - db
  #   networks:
  #     - palindrome-network

  # Optional: Database
  # db:
  #   image: postgres:15-alpine
  #   ports:
  #     - "5432:5432"
  #   environment:
  #     - POSTGRES_DB=palindrome
  #     - POSTGRES_USER=user
  #     - POSTGRES_PASSWORD=password
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - palindrome-network

networks:
  palindrome-network:
    driver: bridge

# volumes:
#   postgres_data:
